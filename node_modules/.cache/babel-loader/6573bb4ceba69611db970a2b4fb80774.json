{"ast":null,"code":"import _slicedToArray from \"/Users/Horace/Documents/Ironhack/Project3/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Horace/Documents/Ironhack/Project3/frontend/src/context/alert/AlertState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport uuid from 'uuid';\nimport AlertContext from './alertContext';\nimport alertReducer from './alertReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AuthState = props => {\n  const initialState = [];\n\n  const _useReducer = useReducer(alertReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const setAlert = (msg, type, timeout = 5000) => {\n    const id = uuid.v4();\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type,\n        id\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT,\n      payload: id\n    }), timeout);\n  }; // set Alert\n\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; // Register User\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Login User\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/auth', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Logout\n\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  }); // Clear Errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return React.createElement(AlertContext.Provider, {\n    value: {\n      alerts: state,\n      setAlert\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/Horace/Documents/Ironhack/Project3/frontend/src/context/alert/AlertState.js"],"names":["React","useReducer","axios","uuid","AlertContext","alertReducer","setAuthToken","SET_ALERT","REMOVE_ALERT","AuthState","props","initialState","state","dispatch","setAlert","msg","type","timeout","id","v4","payload","setTimeout","loadUser","localStorage","token","res","get","USER_LOADED","data","err","AUTH_ERROR","register","formData","config","headers","post","REGISTER_SUCCESS","REGISTER_FAIL","response","login","LOGIN_SUCCESS","LOGIN_FAIL","logout","LOGOUT","clearErrors","CLEAR_ERRORS","alerts","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport uuid from 'uuid';\nimport AlertContext from './alertContext';\nimport alertReducer from './alertReducer';\n\n\nimport setAuthToken from '../../utils/setAuthToken';\n\nimport {\n  SET_ALERT,REMOVE_ALERT\n} from '../types';\n\nconst AuthState = props => {\n  const initialState = [];\n\n  const [state, dispatch] = useReducer( alertReducer, initialState);\n\n  const setAlert = (msg, type, timeout = 5000) => {\n   const id = uuid.v4();\n   dispatch({\n     type: SET_ALERT,\n     payload: { msg, type, id}\n   });\n\n   setTimeout(() => dispatch({ type: REMOVE_ALERT, payload:id }), timeout)\n  }\n\n  // set Alert\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth');\n\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n\n  // Register User\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Login User\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/auth', formData, config);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Logout\n  const logout = () => dispatch({ type: LOGOUT });\n\n  // Clear Errors\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AlertContext.Provider\n      value={{\n        alerts: state,\n        setAlert\n      }}\n    >\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}