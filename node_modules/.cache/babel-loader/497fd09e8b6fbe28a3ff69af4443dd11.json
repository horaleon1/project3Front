{"ast":null,"code":"var _jsxFileName = \"/Users/Horace/Documents/Ironhack/Project3/frontend/src/components/layouts/Prices.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cryptos: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=USD,EUR,JPY,MXN').then(res => {\n      const cryptos = res.data;\n      console.log(cryptos);\n      this.setState({\n        cryptos: cryptos\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"barUser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, Object.keys(this.state.cryptos).map(key => React.createElement(\"div\", {\n      style: {\n        color: \"white\"\n      },\n      className: \"dataBarUser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"BTC/\", key.USD, \" : \", this.state.cryptos[key], \"   | \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"BTC/EUR \", key.EUR, \" : \", this.state.cryptos[key].EUR, \"   | \")) // <div className=\"barUser\">\n    //   <div className=\"dataBarUser\">\n    //   <span>BTC/USD {this.state.cryptos[0]} | </span>     \n    //   <span>BTC/EUR {this.state.cryptos[1]} | </span>                                       \n    //   </div>\n    // </div>\n    ));\n  }\n\n}","map":{"version":3,"sources":["/Users/Horace/Documents/Ironhack/Project3/frontend/src/components/layouts/Prices.js"],"names":["React","Component","axios","constructor","props","state","cryptos","componentDidMount","get","then","res","data","console","log","setState","render","Object","keys","map","key","color","USD","EUR"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,cAAcD,SAAd,CAAwB;AACrCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAE;AACjBL,IAAAA,KAAK,CAACM,GAAN,CAAU,6EAAV,EACCC,IADD,CACMC,GAAG,IAAI;AACX,YAAMJ,OAAO,GAAGI,GAAG,CAACC,IAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACA,WAAKQ,QAAL,CAAc;AAACR,QAAAA,OAAO,EAAEA;AAAV,OAAd;AACD,KALD;AAMD;;AACDS,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,MAAM,CAACC,IAAP,CAAY,KAAKZ,KAAL,CAAWC,OAAvB,EAAgCY,GAAhC,CAAqCC,GAAD,IACnC;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAC;AAAR,OAAZ;AAA+B,MAAA,SAAS,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWD,GAAG,CAACE,GAAf,SAAwB,KAAKhB,KAAL,CAAWC,OAAX,CAAmBa,GAAnB,CAAxB,UAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeA,GAAG,CAACG,GAAnB,SAA4B,KAAKjB,KAAL,CAAWC,OAAX,CAAmBa,GAAnB,EAAwBG,GAApD,UAHF,CADmC,CAOnC;AACA;AACA;AACA;AACA;AACA;AAZD,KADL,CADF;AAmBD;;AApCoC","sourcesContent":["import React, { Component } from 'react'\nimport axios from \"axios\";\n\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cryptos: []\n    };\n  }\n  componentDidMount(){\n    axios.get('https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=USD,EUR,JPY,MXN')\n    .then(res => {\n      const cryptos = res.data;\n      console.log(cryptos);\n      this.setState({cryptos: cryptos});\n    })\n  }\n  render(){\n    return(\n      <div className=\"barUser\">\n          {Object.keys(this.state.cryptos).map((key) => (\n            <div style={{ color:\"white\" }} className=\"dataBarUser\">\n              {/* <span>{key} </span> */}\n              <span>BTC/{key.USD} : { this.state.cryptos[key]}   | </span>\n              <span>BTC/EUR {key.EUR} : { this.state.cryptos[key].EUR}   | </span>\n            </div>\n\n            // <div className=\"barUser\">\n            //   <div className=\"dataBarUser\">\n            //   <span>BTC/USD {this.state.cryptos[0]} | </span>     \n            //   <span>BTC/EUR {this.state.cryptos[1]} | </span>                                       \n            //   </div>\n            // </div>\n\n          ))}\n          </div>\n    )\n  }\n  \n}\n\n"]},"metadata":{},"sourceType":"module"}