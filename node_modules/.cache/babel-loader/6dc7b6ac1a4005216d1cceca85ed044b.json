{"ast":null,"code":"var _jsxFileName = \"/Users/Horace/Documents/Ironhack/Project3/frontend/src/components/layouts/Prices.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cryptos: [],\n      cryptos2: [],\n      cryptos3: [],\n      cryptos4: [],\n      cryptos5: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=USD,EUR,MXN\").then(res => {\n      const cryptos = res.data;\n      console.log(cryptos);\n      this.setState({\n        cryptos: cryptos\n      });\n    });\n    axios.get(\"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD,EUR,MXN\").then(res => {\n      const cryptos2 = res.data;\n      console.log(cryptos2);\n      this.setState({\n        cryptos2: cryptos2\n      });\n    });\n    axios.get(\"https://min-api.cryptocompare.com/data/price?fsym=XRP&tsyms=USD,EUR,MXN\").then(res => {\n      const cryptos3 = res.data;\n      console.log(cryptos3);\n      this.setState({\n        cryptos3: cryptos3\n      });\n    });\n    axios.get(\"https://min-api.cryptocompare.com/data/price?fsym=LTC&tsyms=USD,EUR,MXN\").then(res => {\n      const cryptos4 = res.data;\n      console.log(cryptos4);\n      this.setState({\n        cryptos4: cryptos4\n      });\n    });\n    axios.get(\"https://min-api.cryptocompare.com/data/price?fsym=BCH&tsyms=USD,EUR,MXN\").then(res => {\n      const cryptos5 = res.data;\n      console.log(cryptos5);\n      this.setState({\n        cryptos5\n      });\n    });\n  }\n\n  render() {\n    return (// <div className=\"barUser\">\n      //     {Object.keys(this.state.cryptos).map((key) => (\n      //       <div style={{ color:\"white\" }} className=\"dataBarUser\">\n      //         <span>\n      //           {key}\n      //         </span>\n      //         <span>\n      //           {this.state.cryptos[key].USD}\n      //         </span>\n      //       </div>\n      React.createElement(\"div\", {\n        className: \"barUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dataBarUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"\\u20BF BTC/USD \", this.state.cryptos.USD, \"| \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \" BTC/MXN \", this.state.cryptos.MXN), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \" \\u039E ETH/USD \", this.state.cryptos2.USD, \"| \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"ETH/MXN \", this.state.cryptos2.MXN), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \" \\u01A6 XRP/USD \", this.state.cryptos3.USD, \"| \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"XRP/MXN \", this.state.cryptos3.MXN), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \" \\u0141 LTC/USD \", this.state.cryptos4.USD, \"| \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"LTC/MXN \", this.state.cryptos4.MXN), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \" \\u0E3F BCH/USD \", this.state.cryptos5.USD, \"| \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"BCH/MXN \", this.state.cryptos5.MXN))) //       ))}\n      //       </div>\n      // )\n\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/Horace/Documents/Ironhack/Project3/frontend/src/components/layouts/Prices.js"],"names":["React","Component","axios","constructor","props","state","cryptos","cryptos2","cryptos3","cryptos4","cryptos5","componentDidMount","get","then","res","data","console","log","setState","render","USD","MXN"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cryptos: [],\n      cryptos2: [],\n      cryptos3: [],\n      cryptos4: [],\n      cryptos5: []\n    };\n  }\n  componentDidMount() {\n    axios\n      .get(\n        \"https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=USD,EUR,MXN\"\n      )\n      .then(res => {\n        const cryptos = res.data;\n        console.log(cryptos);\n        this.setState({ cryptos: cryptos });\n      });\n    axios\n      .get(\n        \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD,EUR,MXN\"\n      )\n      .then(res => {\n        const cryptos2 = res.data;\n        console.log(cryptos2);\n        this.setState({ cryptos2: cryptos2 });\n      });\n    axios\n      .get(\n        \"https://min-api.cryptocompare.com/data/price?fsym=XRP&tsyms=USD,EUR,MXN\"\n      )\n      .then(res => {\n        const cryptos3 = res.data;\n        console.log(cryptos3);\n        this.setState({ cryptos3: cryptos3 });\n      });\n    axios\n      .get(\n        \"https://min-api.cryptocompare.com/data/price?fsym=LTC&tsyms=USD,EUR,MXN\"\n      )\n      .then(res => {\n        const cryptos4 = res.data;\n        console.log(cryptos4);\n        this.setState({ cryptos4: cryptos4 });\n      });\n    axios\n      .get(\n        \"https://min-api.cryptocompare.com/data/price?fsym=BCH&tsyms=USD,EUR,MXN\"\n      )\n      .then(res => {\n        const cryptos5 = res.data;\n        console.log(cryptos5);\n        this.setState({ cryptos5 });\n      });\n  }\n  render() {\n    return (\n      // <div className=\"barUser\">\n      //     {Object.keys(this.state.cryptos).map((key) => (\n      //       <div style={{ color:\"white\" }} className=\"dataBarUser\">\n      //         <span>\n      //           {key}\n      //         </span>\n      //         <span>\n      //           {this.state.cryptos[key].USD}\n      //         </span>\n      //       </div>\n\n      <div className=\"barUser\">\n        <div className=\"dataBarUser\">\n          {/* BTC */}\n          <span>₿ BTC/USD {this.state.cryptos.USD}| </span><span> BTC/MXN {this.state.cryptos.MXN}</span>\n          {/* ETH */}\n          <span> Ξ ETH/USD {this.state.cryptos2.USD}| </span><span>ETH/MXN {this.state.cryptos2.MXN}</span>\n          {/* XRP  */}\n          <span> Ʀ XRP/USD {this.state.cryptos3.USD}| </span><span>XRP/MXN {this.state.cryptos3.MXN}</span>\n          {/* LTC */}\n          <span> Ł LTC/USD {this.state.cryptos4.USD}| </span><span>LTC/MXN {this.state.cryptos4.MXN}</span>\n          {/* BCH */}\n          <span> ฿ BCH/USD {this.state.cryptos5.USD}| </span><span>BCH/MXN {this.state.cryptos5.MXN}</span>\n        </div>\n      </div>\n\n      //       ))}\n      //       </div>\n      // )\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}