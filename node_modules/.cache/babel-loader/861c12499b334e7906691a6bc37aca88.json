{"ast":null,"code":"var _jsxFileName = \"/Users/Horace/Documents/Ironhack/Project3/frontend/src/components/layouts/Prices.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      btc: [],\n      eth: [],\n      xrp: [],\n      ltc: [],\n      bch: [],\n      eos: []\n    };\n  }\n\n  async componentDidMount() {\n    // setInterval(() => {\n    // axios\n    // .get\n    let response = await fetch(\"https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=USD,EUR,MXN\"); // .then(res => {\n    // const btc = res.data;\n\n    const btc = response.data; //console.log(btc);\n\n    this.setState({\n      btc\n    }); // });\n    // }, 3000);\n    // setInterval(() => {\n    //   axios\n    //     .get(\n    //       \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD,EUR,MXN\"\n    //     )\n    //     .then(res => {\n    //       const eth = res.data;\n    //       //console.log(eth);\n    //       this.setState({ eth });\n    //     });\n    // }, 3000);\n    // setInterval(() => {\n    //   axios\n    //     .get(\n    //       \"https://min-api.cryptocompare.com/data/price?fsym=XRP&tsyms=USD,EUR,MXN\"\n    //     )\n    //     .then(res => {\n    //       const xrp = res.data;\n    //       //console.log(xrp);\n    //       this.setState({ xrp });\n    //     });\n    // }, 3000);\n    // setInterval(() => {\n    //   axios\n    //     .get(\n    //       \"https://min-api.cryptocompare.com/data/price?fsym=LTC&tsyms=USD,EUR,MXN\"\n    //     )\n    //     .then(res => {\n    //       const ltc = res.data;\n    //       //console.log(ltc);\n    //       this.setState({ ltc });\n    //     });\n    // }, 3000);\n    // setInterval(() => {\n    //   axios\n    //     .get(\n    //       \"https://min-api.cryptocompare.com/data/price?fsym=BCH&tsyms=USD,EUR,MXN\"\n    //     )\n    //     .then(res => {\n    //       const bch = res.data;\n    //       //console.log(bch);\n    //       this.setState({ bch });\n    //     });\n    // }, 3000);\n    // setInterval(() => {\n    //   axios\n    //     .get(\n    //       \"https://min-api.cryptocompare.com/data/price?fsym=EOS&tsyms=USD,EUR,MXN\"\n    //     )\n    //     .then(res => {\n    //       const eos = res.data;\n    //       //console.log(bch);\n    //       this.setState({ eos });\n    //     });\n    // }, 3000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"barUser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dataBarUser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"live\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"En vivo:\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"\\u20BF\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"BTC/USD \", this.state.btc.USD), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"BTC/MXN \", this.state.btc.MXN), \" */}\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/Horace/Documents/Ironhack/Project3/frontend/src/components/layouts/Prices.js"],"names":["React","Component","axios","constructor","props","state","btc","eth","xrp","ltc","bch","eos","componentDidMount","response","fetch","data","setState","render","USD","MXN"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,cAAcD,SAAd,CAAwB;AACrCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,EADM;AAEXC,MAAAA,GAAG,EAAE,EAFM;AAGXC,MAAAA,GAAG,EAAE,EAHM;AAIXC,MAAAA,GAAG,EAAE,EAJM;AAKXC,MAAAA,GAAG,EAAE,EALM;AAMXC,MAAAA,GAAG,EAAE;AANM,KAAb;AAQD;;AACD,QAAMC,iBAAN,GAA0B;AACxB;AACE;AACE;AACD,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CACvB,yEADuB,CAA1B,CAJqB,CAOpB;AACE;;AACA,UAAMR,GAAG,GAAGO,QAAQ,CAACE,IAArB,CATkB,CAUlB;;AACA,SAAKC,QAAL,CAAc;AAAEV,MAAAA;AAAF,KAAd,EAXkB,CAYpB;AACJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AACDW,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACW,KAAKZ,KAAL,CAAWC,GAAX,CAAeY,GAD1B,CANF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAe,KAAKb,KAAL,CAAWC,GAAX,CAAea,GAA9B,CAVF,SADF,CADF;AA2CD;;AAnIoC","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      btc: [],\n      eth: [],\n      xrp: [],\n      ltc: [],\n      bch: [],\n      eos: []\n    };\n  }\n  async componentDidMount() {\n    // setInterval(() => {\n      // axios\n        // .get\n       let response = await fetch(\n          \"https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=USD,EUR,MXN\"\n        )\n        // .then(res => {\n          // const btc = res.data;\n          const btc = response.data\n          //console.log(btc);\n          this.setState({ btc });\n        // });\n    // }, 3000);\n\n    // setInterval(() => {\n    //   axios\n    //     .get(\n    //       \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD,EUR,MXN\"\n    //     )\n    //     .then(res => {\n    //       const eth = res.data;\n    //       //console.log(eth);\n    //       this.setState({ eth });\n    //     });\n    // }, 3000);\n\n    // setInterval(() => {\n    //   axios\n    //     .get(\n    //       \"https://min-api.cryptocompare.com/data/price?fsym=XRP&tsyms=USD,EUR,MXN\"\n    //     )\n    //     .then(res => {\n    //       const xrp = res.data;\n    //       //console.log(xrp);\n    //       this.setState({ xrp });\n    //     });\n    // }, 3000);\n\n    // setInterval(() => {\n    //   axios\n    //     .get(\n    //       \"https://min-api.cryptocompare.com/data/price?fsym=LTC&tsyms=USD,EUR,MXN\"\n    //     )\n    //     .then(res => {\n    //       const ltc = res.data;\n    //       //console.log(ltc);\n    //       this.setState({ ltc });\n    //     });\n    // }, 3000);\n\n    // setInterval(() => {\n    //   axios\n    //     .get(\n    //       \"https://min-api.cryptocompare.com/data/price?fsym=BCH&tsyms=USD,EUR,MXN\"\n    //     )\n    //     .then(res => {\n    //       const bch = res.data;\n    //       //console.log(bch);\n    //       this.setState({ bch });\n    //     });\n    // }, 3000);\n    // setInterval(() => {\n    //   axios\n    //     .get(\n    //       \"https://min-api.cryptocompare.com/data/price?fsym=EOS&tsyms=USD,EUR,MXN\"\n    //     )\n    //     .then(res => {\n    //       const eos = res.data;\n    //       //console.log(bch);\n    //       this.setState({ eos });\n    //     });\n    // }, 3000);\n  }\n  render() {\n    return (\n      <div className=\"barUser\">\n        <div className=\"dataBarUser\">\n          <span className=\"live\"></span>\n          <span>\n            <i>En vivo:</i>\n          </span>\n          <span>₿</span>\n          <span>\n            BTC/USD {this.state.btc.USD}\n            {/* | BTC/EUR {this.state.btc.EUR}  */}\n          </span>\n          <span>BTC/MXN {this.state.btc.MXN}</span>\n          {/* <span>Ξ</span>\n          <span>\n            ETH/USD {this.state.eth.USD}\n            {/* | ETH/EUR {this.state.eth.EUR}  */}\n          {/* </span> */}\n          {/* <span>ETH/MXN {this.state.eth.MXN}</span> */}\n          {/* <span>Ʀ</span> */}\n          {/* <span> */}\n            {/* XRP/USD {this.state.xrp.USD} */}\n            {/* | XRP/EUR {this.state.xrp.EUR}  */}\n          {/* </span> */}\n          {/* <span>XRP/MXN {this.state.xrp.MXN}</span> */}\n          {/* <span>Ł</span> */}\n          {/* <span> */}\n            {/* LTC/USD {this.state.ltc.USD} */}\n            {/* | LTC/EUR {this.state.ltc.EUR}  */}\n          {/* </span> */}\n          {/* <span>LTC/MXN {this.state.ltc.MXN}</span> */}\n          {/* <span>฿</span> */}\n          {/* <span> */}\n            {/* BCH/USD {this.state.bch.USD} */}\n            {/* | BCH/EUR {this.state.bch.EUR}  */}\n          {/* </span> */} */}\n          {/* <span>BCH/MXN {this.state.bch.MXN}</span> */}\n          {/* <span>\n            Ȅ EOS/USD {this.state.bch.EOS} | EOS/EUR {this.state.bch.EOS} | EOS/MXN {this.state.bch.EOS}\n          </span> */}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}