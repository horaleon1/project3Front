{"ast":null,"code":"import _slicedToArray from \"/Users/Horace/Documents/Ironhack/Project3/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Horace/Documents/Ironhack/Project3/frontend/src/context/auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer'; // import setAuthToken from '../../utils/setAuthToken';\n\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n\n  const _useReducer = useReducer(authReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Load User\n  // const loadUser = async () => {\n  //   if (localStorage.token) {\n  //     setAuthToken(localStorage.token);\n  //   }\n  //   try {\n  //     const res = await axios.get('/api/auth');\n  //     dispatch({\n  //       type: USER_LOADED,\n  //       payload: res.data\n  //     });\n  //   } catch (err) {\n  //     dispatch({ type: AUTH_ERROR });\n  //   }\n  // };\n  // Register User\n  // const register = async formData => {\n  //   const config = {\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     }\n  //   };\n  //   try {\n  //     const res = await axios.post('/api/users', formData, config);\n  //     dispatch({\n  //       type: REGISTER_SUCCESS,\n  //       payload: res.data\n  //     });\n  //     loadUser();\n  //   } catch (err) {\n  //     dispatch({\n  //       type: REGISTER_FAIL,\n  //       payload: err.response.data.msg\n  //     });\n  //   }\n  // };\n  // Login User\n  // const login = async formData => {\n  //   const config = {\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     }\n  //   };\n  //   try {\n  //     const res = await axios.post('/api/auth', formData, config);\n  //     dispatch({\n  //       type: LOGIN_SUCCESS,\n  //       payload: res.data\n  //     });\n  //     loadUser();\n  //   } catch (err) {\n  //     dispatch({\n  //       type: LOGIN_FAIL,\n  //       payload: err.response.data.msg\n  //     });\n  //   }\n  // };\n  // Logout\n  // const logout = () => dispatch({ type: LOGOUT });\n  // Clear Errors\n  // const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/Horace/Documents/Ironhack/Project3/frontend/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","authReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;;AAEA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,YARF,QASO,UATP;;AAWA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,IAAAA,eAAe,EAAE,IAFE;AAGnBC,IAAAA,OAAO,EAAE,IAHU;AAInBC,IAAAA,IAAI,EAAE,IAJa;AAKnBC,IAAAA,KAAK,EAAE;AALY,GAArB;;AADyB,sBASArB,UAAU,CAACG,WAAD,EAAcW,YAAd,CATV;AAAA;AAAA,QASnBQ,KATmB;AAAA,QASZC,QATY,oBAWzB;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;;AAEA,SACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLR,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADR;AAELG,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eAFlB;AAGLC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHV;AAILC,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAJP;AAKLC,MAAAA,KAAK,EAAEC,KAAK,CAACD;AALR,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGR,KAAK,CAACW,QATT,CADF;AAaD,CAlGD;;AAoGA,eAAeZ,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\n\n// import setAuthToken from '../../utils/setAuthToken';\n\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS\n} from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n\n const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load User\n  // const loadUser = async () => {\n  //   if (localStorage.token) {\n  //     setAuthToken(localStorage.token);\n  //   }\n\n  //   try {\n  //     const res = await axios.get('/api/auth');\n\n  //     dispatch({\n  //       type: USER_LOADED,\n  //       payload: res.data\n  //     });\n  //   } catch (err) {\n  //     dispatch({ type: AUTH_ERROR });\n  //   }\n  // };\n\n  // Register User\n  // const register = async formData => {\n  //   const config = {\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     }\n  //   };\n\n  //   try {\n  //     const res = await axios.post('/api/users', formData, config);\n\n  //     dispatch({\n  //       type: REGISTER_SUCCESS,\n  //       payload: res.data\n  //     });\n\n  //     loadUser();\n  //   } catch (err) {\n  //     dispatch({\n  //       type: REGISTER_FAIL,\n  //       payload: err.response.data.msg\n  //     });\n  //   }\n  // };\n\n  // Login User\n  // const login = async formData => {\n  //   const config = {\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     }\n  //   };\n\n  //   try {\n  //     const res = await axios.post('/api/auth', formData, config);\n\n  //     dispatch({\n  //       type: LOGIN_SUCCESS,\n  //       payload: res.data\n  //     });\n\n  //     loadUser();\n  //   } catch (err) {\n  //     dispatch({\n  //       type: LOGIN_FAIL,\n  //       payload: err.response.data.msg\n  //     });\n  //   }\n  // };\n\n  // Logout\n  // const logout = () => dispatch({ type: LOGOUT });\n\n  // Clear Errors\n  // const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}